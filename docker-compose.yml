services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: scalebit_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/aws/main.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: .
      dockerfile: internal/pkg/services/users/Dockerfile
    environment:
      DATABASE_DSN: postgres://postgres:password@postgres:5432/scalebit_platform?sslmode=disable
      JWT_SECRET: BQ9PNtaBZcytjxBGF6mVwp94N-rbJVuVp_sqm_GMT2A
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"

  product-service:
    build:
      context: .
      dockerfile: internal/pkg/services/product/Dockerfile
    environment:
      DATABASE_DSN: postgres://postgres:password@postgres:5432/scalebit_platform?sslmode=disable
      JWT_SECRET: BQ9PNtaBZcytjxBGF6mVwp94N-rbJVuVp_sqm_GMT2A
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"

  order-service:
    build:
      context: .
      dockerfile: internal/pkg/services/order/Dockerfile
    environment:
      DATABASE_DSN: postgres://postgres:password@postgres:5432/scalebit_platform?sslmode=disable
      JWT_SECRET: BQ9PNtaBZcytjxBGF6mVwp94N-rbJVuVp_sqm_GMT2A
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8082"

  payment-service:
    build:
      context: .
      dockerfile: internal/pkg/services/payment/Dockerfile
    environment:
      DATABASE_DSN: postgres://postgres:password@postgres:5432/scalebit_platform?sslmode=disable
      JWT_SECRET: BQ9PNtaBZcytjxBGF6mVwp94N-rbJVuVp_sqm_GMT2A
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8083:8083"

  krakend:
    image: devopsfaith/krakend:2.4
    ports:
      - "8000:80"
    volumes:
      - ./deployments/aws/krakend.json:/etc/krakend/krakend.json
      - ./deployments/aws/symmetric.jwk:/etc/krakend/symmetric.jwk
    depends_on:
      user-service:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started
      payment-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s



volumes:
  postgres_data: